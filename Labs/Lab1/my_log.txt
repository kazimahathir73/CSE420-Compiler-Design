Line no 1: Token <ID> Lexeme int found

Line no 1: Token <ID> Lexeme func found

Line no 1: Token <LPAREN> Lexeme ( found

Line no 1: Token <ID> Lexeme int found

Line no 1: Token <ID> Lexeme var1 found

Line no 1: Token <LTHIRD> Lexeme [ found

Line no 1: Token <RTHIRD> Lexeme ] found

Line no 1: Token <COMMA> Lexeme , found

Line no 1: Token <ID> Lexeme float found

Line no 1: Token <ID> Lexeme var3 found

Line no 1: Token <RPAREN> Lexeme ) found

Line no 2: Token <LCURL> Lexeme { found

Line no 3: Token <ID> Lexeme int found

Line no 3: Token <ID> Lexeme a found

Line no 3: Token <ASSIGNOP> Lexeme = found

Line no 3: Token <INTEGER> Lexeme 10
Line no 3: Token <SEMICOLON> Lexeme ; found

Line no 4: Token <ID> Lexeme float found

Line no 4: Token <ID> Lexeme b found

Line no 4: Token <ASSIGNOP> Lexeme = found

Line no 4: Token <FLOAT> Lexeme 1.56
Line no 4: Token <SEMICOLON> Lexeme ; found

Line no 5: Token <ID> Lexeme float found

Line no 5: Token <ID> Lexeme c found

Line no 5: Token <ASSIGNOP> Lexeme = found

Line no 5: Token <FLOAT> Lexeme 1.56
Line no 5: Token <ID> Lexeme e found

Line no 5: Token <ADDOP> Lexeme - found

Line no 5: Token <INTEGER> Lexeme 4
Line no 5: Token <SEMICOLON> Lexeme ; found

Line no 6: Token <ID> Lexeme float found

Line no 6: Token <ID> Lexeme d found

Line no 6: Token <ASSIGNOP> Lexeme = found

Line no 6: Token <FLOAT> Lexeme 0.56
Line no 6: Token <SEMICOLON> Lexeme ; found

Line no 7: Token <ID> Lexeme float found

Line no 7: Token <ID> Lexeme e found

Line no 7: Token <ASSIGNOP> Lexeme = found

Line no 7: Token <FLOAT> Lexeme 0.56
Line no 7: Token <ID> Lexeme e5 found

Line no 7: Token <SEMICOLON> Lexeme ; found

Line no 9: Token <IF> Lexeme if found

Line no 9: Token <LPAREN> Lexeme ( found

Line no 9: Token <ID> Lexeme a found

Line no 9: Token <REOP> Lexeme > found

Line no 9: Token <ID> Lexeme b found

Line no 9: Token <RPAREN> Lexeme ) found

Line no 10: Token <LCURL> Lexeme { found

Line no 11: Token <PRINTF> Lexeme printf found

Line no 11: Token <LPAREN> Lexeme ( found

Line no 11: Token <ID> Lexeme a found

Line no 11: Token <RPAREN> Lexeme ) found

Line no 11: Token <SEMICOLON> Lexeme ; found

Line no 12: Token <RCURL> Lexeme } found

Line no 13: Token <ELSE> Lexeme else found

Line no 13: Token <IF> Lexeme if found

Line no 13: Token <LPAREN> Lexeme ( found

Line no 13: Token <ID> Lexeme c found

Line no 13: Token <REOP> Lexeme < found

Line no 13: Token <ID> Lexeme d found

Line no 13: Token <RPAREN> Lexeme ) found

Line no 14: Token <LCURL> Lexeme { found

Line no 15: Token <PRINTF> Lexeme printf found

Line no 15: Token <LPAREN> Lexeme ( found

Line no 15: Token <ID> Lexeme b found

Line no 15: Token <RPAREN> Lexeme ) found

Line no 15: Token <SEMICOLON> Lexeme ; found

Line no 16: Token <RCURL> Lexeme } found

Line no 17: Token <ELSE> Lexeme else found

Line no 18: Token <LCURL> Lexeme { found

Line no 19: Token <PRINTF> Lexeme printf found

Line no 19: Token <LPAREN> Lexeme ( found

Line no 19: Token <ID> Lexeme b found

Line no 19: Token <RPAREN> Lexeme ) found

Line no 19: Token <SEMICOLON> Lexeme ; found

Line no 20: Token <RCURL> Lexeme } found

Line no 22: Token <WHILE> Lexeme while found

Line no 22: Token <LPAREN> Lexeme ( found

Line no 22: Token <ID> Lexeme a found

Line no 22: Token <REOP> Lexeme <= found

Line no 22: Token <INTEGER> Lexeme 13
Line no 22: Token <RPAREN> Lexeme ) found

Line no 23: Token <LCURL> Lexeme { found

Line no 24: Token <PRINTF> Lexeme printf found

Line no 24: Token <LPAREN> Lexeme ( found

Line no 24: Token <ID> Lexeme a found

Line no 24: Token <RPAREN> Lexeme ) found

Line no 24: Token <SEMICOLON> Lexeme ; found

Line no 25: Token <ID> Lexeme a found

Line no 25: Token <INOP> Lexeme ++ found

Line no 25: Token <SEMICOLON> Lexeme ; found

Line no 26: Token <RCURL> Lexeme } found

Line no 28: Token <RETURN> Lexeme return found

Line no 28: Token <INTEGER> Lexeme 0
Line no 28: Token <SEMICOLON> Lexeme ; found

Line no 29: Token <RCURL> Lexeme } found

Total lines:29
